name: Java CICD with Gradle

on:
  push:
    branches: [ "develop" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: gradle
       
    - name: Build with Gradle
      run: |
        chmod +x ./gradlew 
        ./gradlew petlog-api:bootJar
    - name: Upload build artifact
      uses: actions/upload-artifact@v2
      with:
        name: petlog
        path: petlog-api/build/libs/petlog-api-0.0.1-SNAPSHOT.jar

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Download build artifact
      uses: actions/download-artifact@v2
      with:
        name: petlog
        path: petlog-api/build/libs/

    - name: Deploy to EC2
      run: |
        echo "${{ secrets.SSH_KEY }}" > private_key.pem
        chmod 600 private_key.pem
        scp -i private_key.pem -o StrictHostKeyChecking=no petlog-api/build/libs/petlog-api-0.0.1-SNAPSHOT.jar ${{ secrets.USERNAME }}@${{ secrets.HOST }}:/home/${{ secrets.USERNAME }}/petlog-api.jar
        ssh -i private_key.pem -o StrictHostKeyChecking=no ${{ secrets.USERNAME }}@${{ secrets.HOST }} "kill -9 `ps -ef | grep "Dspring" | grep -v grep | awk '{print $2}'`; nohup java -jar -Dspring.profiles.active=dev -Djasypt.encryptor.password=${{ secrets.JASYPT_ENCRYPTOR_PASSWORD }} /home/${{ secrets.USERNAME }}/petlog-api.jar > app.log 2>&1 &"
        rm -f private_key.pem
